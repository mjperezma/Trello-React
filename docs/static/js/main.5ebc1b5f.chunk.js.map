{"version":3,"sources":["components/Header.js","components/ListHeader.js","components/ListFooter.js","components/Card.js","components/List.js","components/ListNew.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","className","type","title","onChange","ev","preventDefault","handleFilter","value","target","data","console","log","currentTarget","ListHeader","placeholder","ListFooter","id","onClick","handleNewCard","Card","tagElements","card","tags","map","tag","index","List","cardElement","list","cards","item","key","ListNew","handleEventAdd","Main","listElement","App","apiList","board","useState","setList","filter","setFilter","i","renderFilterList","toUpperCase","includes","newList","push","parseInt","description","Array","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5ebc1b5f.chunk.js","sourcesContent":["import React from 'react';\nimport Menu from './Menu';\n\nconst Header = (props) => {\n  const handleSearch = (ev) => {\n    ev.preventDefault();\n    props.handleFilter({\n      value: ev.target.value,\n      data: 'name',\n    });\n    console.log(ev.currentTarget.value);\n  };\n  return (\n    <header className='app-header bg-primary mb-3 d-flex justify-content-between align-items-center shadow'>\n      <h1 className='app-header-title h3 text-white pl-3 pt-1 mr-4 font-weight-light'>Gestor de proyectos</h1>\n      <form className='app-header-form p-2 d-flex justify-content-end'>\n        <div className='app-header-input input-group input-group-sm mr-2'>\n          <div className='input-group-prepend'>\n            <span className='input-group-text bg-white border-right-0 text-primary'>\n              <span className='fas fa-search'></span>\n            </span>\n          </div>\n          <input type='text' className='app-header-search form-control border-left-0' title='Filtrar las tareas' onChange={handleSearch} />\n        </div>\n        <button type='button' className='js-menu-btn btn btn-primary btn-sm text-white-50' title='Abrir el menú'>\n          <span className='fas fa-columns'></span>\n        </button>\n      </form>\n      {/* <Menu /> */}\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst ListHeader = (props) => {\n  return (\n    <form className='app-list-form align-middle p-1 position-relative'>\n      <input className='app-list-input form-control form-control-sm' placeholder='Tareas importantes' type='text' value={props.title} title='Editar el título de la lista' />\n      <div className='app-list-options'>\n        <span className='pl-2 pr-2 text-white-50 fas fa-ellipsis-v'></span>\n\n        <div className='app-list-btns btn-group btn-group-sm'>\n          <button type='button' className='btn btn-light text-muted border shadow-sm' title='Borrar esta tarjeta'>\n            <span className='fas fa-trash-alt'></span>\n          </button>\n          <button type='button' className='btn btn-light text-muted border shadow-sm app-list-move-left' title='Mover esta lista hacia la izquierda'>\n            <span className='fas fa-arrow-left'></span>\n          </button>\n          <button type='button' className='btn btn-light text-muted border shadow-sm app-list-move-right' title='Mover esta lista hacia la derecha'>\n            <span className='fas fa-arrow-right'></span>\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ListHeader;\n","import React from 'react';\n\nconst ListFooter = (props) => {\n  console.log(props);\n  const handleNewCard = (ev) => {\n    props.handleNewCard(ev.currentTarget.id);\n  };\n  return (\n    <button id={props.id} onClick={handleNewCard} type='button' className='ml-1 btn btn-primary btn-sm text-white-50' title='Añadir una nueva tarjeta'>\n      <span className='fas fa-plus'></span>\n      Añadir otra tarjeta\n    </button>\n  );\n};\n\nexport default ListFooter;\n","import React from 'react';\n\nconst Card = (props) => {\n  const tagElements = props.card.tags.map((tag, index) => {\n    return (\n      <span id={index} className='badge badge-secondary bg-success'>\n        {tag}\n      </span>\n    );\n  });\n\n  return (\n    <article className='js-card app-card m-1 mb-2 p-2 bg-white rounded-sm app-cursor-pointer shadow-sm' title='Abrir la tarjeta'>\n      <div>{tagElements}</div>\n\n      <div>\n        <h3 className='h6'>{props.card.title}</h3>\n      </div>\n\n      <div className='text-black-50'>\n        <small className='pr-2 fas fa-align-left'></small>\n        <small className='far fa-check-square'></small>\n        <small title='Subtareas completadas: 3 de 5'>3/5</small>\n      </div>\n\n      <div className='app-card-btns btn-group-vertical btn-group-sm'>\n        <button type='button' className='btn btn-light text-muted border shadow-sm app-card-move-up' title='Mover esta tarjeta hacia abajo'>\n          <span className='fas fa-arrow-up'></span>\n        </button>\n        <button type='button' className='btn btn-light text-muted border shadow-sm app-card-move-down' title='Mover esta tarjeta hacia arriba'>\n          <span className='fas fa-arrow-down'></span>\n        </button>\n      </div>\n    </article>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ListHeader from './ListHeader';\nimport ListFooter from './ListFooter';\nimport Card from './Card';\n\nconst List = (props) => {\n  console.log(props);\n  const cardElement = props.list.cards.map((item) => {\n    return <Card card={item} key={item.id} />;\n  });\n\n  return (\n    <>\n      <div className='app-list'>\n        <div className='p-1 rounded-sm bg-primary shadow'>\n          <ListHeader title={props.list.title} id={props.list.id} />\n          {cardElement}\n          <ListFooter id={props.id} handleNewCard={props.handleNewCard} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default List;\n","import React from 'react';\n\nconst ListNew = (props) => {\n  const handleAddNewList = () => {\n    props.handleEventAdd();\n  };\n  return (\n    <div>\n      <button onClick={handleAddNewList} type='button' className='btn btn-light btn-outline-primary btn-sm mr-5 shadow-sm' title='Añadir una nueva lista'>\n        <span className='fas fa-plus'></span>\n      </button>\n    </div>\n  );\n};\n\nexport default ListNew;\n","import React from 'react';\nimport List from './List';\nimport ListNew from './ListNew';\nconst Main = (props) => {\n  const listElement = props.list.map((item, index) => {\n    return <List list={item} id={index} cards={props.cards} handleNewCard={props.handleNewCard} />;\n  });\n  return (\n    <main id={props.id} className='app-board d-flex flex-nowrap'>\n      {listElement}\n      <ListNew handleEventAdd={props.handleEventAdd} id={props.id} />\n    </main>\n  );\n};\n\nexport default Main;\n","import React, {useState} from 'react';\nimport '../assets/scss/App.scss';\nimport Header from './Header';\nimport List from './List';\nimport Main from './Main';\nimport board from '../api/board.json';\n\nfunction App() {\n  const apiList = board.board.list;\n  const [list, setList] = useState(apiList);\n  const [cards, setCards] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  function handleFilter(data) {\n    setFilter(data.value);\n  }\n  function handleEventAdd() {\n    const newList = [...list];\n    newList.push({title: '', cards: []});\n    setList(newList);\n  }\n  list.map((item, i) => (item.id = i));\n\n  function handleNewCard(id) {\n    function addNewCard() {\n      for (const item of list) {\n        console.log(item.cards);\n        if (item.id === parseInt(id)) {\n          item.cards.push({id: '', title: '', description: '', tags: Array(0)});\n        }\n      }\n      return setList(list);\n    }\n    addNewCard();\n  }\n  console.log(list);\n  const renderFilterList = list.filter((list) => {\n    return list.title.toUpperCase().includes(filter.toUpperCase());\n  });\n  return (\n    <>\n      <Header handleFilter={handleFilter} />\n      <p>Estas buscando por {filter} </p>\n      <Main handleEventAdd={handleEventAdd} cards={cards} list={list} handleNewCard={handleNewCard} renderFilterList={renderFilterList} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}